<!-- views/grid.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product List</title>
  <style>

    table {
      width: 80%;
      border-collapse: collapse;
      margin: 20px;
      box-shadow: 0 0 10px #fff;
      overflow: hidden;
      border-radius: 8px;
      background-color: #fff;
    }

    th, td {
      padding: 12px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    th {
      background-color:#79e17c78;
    }

    tr:hover {
      background-color: #4CAF50;
      cursor: pointer;
    }

    .selected-row {
      background-color: #79e17c;
    }
    
    /* body {
      font-family: Arial, sans-serif;
      margin: 20px;
    } */

    .search-container {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .search-input {
      padding: 10px;
      width: 300px;
      border: 1px solid #f5f5f5;
      border-radius: 5px;
      margin-right: 10px;
    }

    .search-button {
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }

    h1 {
      text-align: center;
    }

    body {
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      min-height: 100vh;
      background-color: #f5f5f5;
      flex-direction: column;
    }

    .search-container {
      background-color: #f5f5f5;
      color: #f5f5f5;
      padding: 10px;
      text-align: center;
    }

    .container {
      display: flex;
      width: 80%;
      margin: auto;
    }

    .left-container, .right-container {
      flex: 1;
      padding: 20px;
      box-sizing: border-box;
    }

    .left-container {
      background-color: #f5f5f5;
    }

    .right-container {
      background-color: #f5f5f5;
    }
    main {
      grid-row: 1; /* Content goes in the first row */
      max-height: 85vh; /* Maximum height for the content area */
      overflow-y: auto; /* Add vertical scroll when content exceeds the height */
      padding: 20px;
      box-sizing: border-box;
    }

    footer {
      grid-row: 2; /* Footer goes in the second row */
      background-color: #333;
      color: #fff;
      text-align: center;
      padding: 20px;
    }
  </style>
</head>
<body>
  <script>
    function search() {
      var searchProduct = document.getElementById('searchInput').value.toLowerCase();
      fetch(`/RecientlyViewRecommendations`)
        .then(response => response.json())
        .then(data => {
          // Update the UI with the search results
          console.log('result'+data.results);
 const dataRes =JSON.stringify(data.results);
 const tableBody = document.getElementById('tableBody');
  tableBody.innerHTML = '';
  data.results.forEach(item => {
    const row = document.createElement('tr');
    row.innerHTML = `
      <td>${item.primaryProductId}</td>
      <td>${item.title}</td>
      <td>${item.type}</td>
      <td>${ item.categories.join(', ')}</td>
      <td>${item.availability}</td>
    `;
    row.addEventListener('click', () => {
          // Handle the click event, for example, log the clicked item's title
          console.log('Clicked item:', item.title);
          alert(`Get Simmilar Items for the category - ${item.categories.join(', ')}- in below Grid`);
          searchSimilarItems(item.primaryProductId);
        });
    tableBody.appendChild(row);
  });
        }).catch(error => console.error('Error:', error));
    } 
    function searchSimilarItems(productId) {
      fetch(`/SimilarItems/${productId}`)
        .then(response => response.json())
        .then(data => {
          // Update the UI with the search results
          console.log('resultSimilarItems'+data.results);
 const dataRes =JSON.stringify(data.results);
 const tableBody = document.getElementById('tblSmiliarItem');
  tableBody.innerHTML = '';
  data.results.forEach(item => {
    const row = document.createElement('tr');
    row.innerHTML = `
      <td>${item.primaryProductId}</td>
      <td>${item.title}</td>
      <td>${item.type}</td>
      <td>${ item.categories.join(', ')}</td>
      <td>${item.availability}</td>
    `;
   
    tableBody.appendChild(row);
  });
        }).catch(error => console.error('Error:', error));
    } 
  </script>
  
  <main>
    <h1>Movie Recommendations</h1>
    <div class="search-container">
      <input type="text" class="search-input" id="searchInput" placeholder="Search...">
      <button class="search-button" onclick="search()">Search</button>
    </div>
    <div class="container">
     
      <div class="left-container">
        <!-- Content for the left container -->
     
        <h4>Recent Movie Recommendations</h4>
        <table border="1">
          <thead>
            <tr>
              <th>Primary Product Id</th>
              <th>Title</th>
              <th>Type</th>
              <th>Category</th>
              <th>Availability</th>
            </tr>
          </thead>
          <tbody id="tableBody">
           
          </tbody>
        </table>
      </div>
  
      <div class="right-container">
        <!-- Content for the right container -->
        <h4>Similar Movie Recommendations</h4>
        <table border="1">
          <thead>
            <tr>
              <th>Primary Product Id</th>
              <th>Title</th>
              <th>Type</th>
              <th>Category</th>
              <th>Availability</th>
            </tr>
          </thead>
          <tbody id="tblSmiliarItem">
            
          </tbody>
        </table>
      </div>
    </div>
  </main>

  <footer>
    <!-- Footer content goes here -->
    <p>&copy; 2024 Product Recommendations System</p>
  </footer>
  <script>
   
  </script>
  
</body>
</html>

